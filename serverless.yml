service:
  name: s3-alert
#app: your-app-name
#tenant: your-tenant-name

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  # - serverless-hooks-plugin
  - serverless-iam-roles-per-function
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs10.x
  region: ${opt:region, 'us-east-1'} # Transcribe isn't in ap-southeast-2
  memorySize: 128
  timeout: 300
  stage: ${opt:stage, self:custom.defaultStage}
  profile: ${self:custom.profiles.${self:provider.stage}}

custom:
  defaultStage: dev
  profiles:
    dev: sandbox-bretwaldow-admin
  common:
    notificationTopic: ${self:service}-Notifications
    notificationTopicArn: "arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:${self:custom.common.notificationTopic}"

  # # serverless plugins:
  # hooks:
  #   package:initialize:
  #     - npm run package
  pseudoParameters:
    allowReferences: true
    skipRegionReplace: true

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          method: get
          path: hello
    environment:
      NOTIFICATION_TOPIC: ${self:custom.common.notificationTopicArn}
      NOTIFICATION_TIMEZONE: Australia/Perth
    onError: ${self:custom.common.notificationTopicArn}
    # iamRoleStatementsName: ${self:service}-${self:provider.stage}-processVoicemail-lambdaRole
    iamRoleStatementsName: ${self:custom.common.notificationTopic}
    iamRoleStatements:
      # - Effect: Allow
      #   Action:
      #     - logs:FilterLogEvents
      #   Resource: ${self:custom.common.amazonConnectLogGroup}
      # - Effect: Allow
      #   Action:
      #     - transcribe:StartTranscriptionJob
      #     - transcribe:GetTranscriptionJob
      #   Resource: "*"
      # - Effect: Allow
      #   Action:
      #     - s3:GetObject
      #   Resource: "arn:aws:s3:::${self:custom.common.voicemailBucket}/*"
      - Effect: Allow
        Action:
          - sns:Publish
        Resource:
          - ${self:custom.common.notificationTopicArn}

resources:
  Resources:
    SNSTopicMrNotify:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:custom.common.notificationTopic}
